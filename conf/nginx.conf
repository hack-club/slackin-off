worker_processes 1;

error_log /dev/stdout info;
pid /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] '
                  '"$request_method $host $request_uri" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /dev/stdout main;

  proxy_buffering on;
  proxy_buffer_size 8k;
  proxy_buffers 2048 8k;

  sendfile on;

  keepalive_timeout  65;

  upstream slackin {
    server localhost:3000;
  }

  server {
    listen 80 default_server;

    location /health-check {
      access_log off;
      proxy_pass http://slackin/;
    }

    location / {
      # Forces HTTPS.
      #
      # $http_x_forwarded_proto is a header set by the Elastic Load Balancer
      # that contains the protocol in the request.
      if ($http_x_forwarded_proto = "http") {
        return 301 https://$host$1;
      }

      proxy_pass http://slackin;

      # Add HTTP Strict Transport Security because we can!
      add_header Strict-Transport-Security "max-age=31536000;";
    }

    # Set up a websocket proxy for requests to /socket.io/
    location /socket.io/ {
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_http_version 1.1;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_pass http://slackin;
    }
  }
}
